#!/bin/bash

set -eou pipefail

#SITELIST="sites-test.txt"
SITELIST="sites.txt"

# Number of seconds to pause between applying the update and trying to commit.
# Pantheon takes a few seconds to register the code diffs as committable.
OSD_SLEEP_INTERVAL=8

# Loop through all sites on the list.
while IFS='' read -r SITENAME || [ -n "${SITENAME}" ]; do
    echo "Site: $SITENAME"
    # Check for plugin updates.
    PLUGINS="$(terminus wp "${SITENAME}".dev -- plugin update --all --format=json --dry-run < /dev/null | jq -c '.[]')"
    # Check for theme updates.
    THEMES="$(terminus wp "${SITENAME}".dev -- theme update --all --format=json --dry-run < /dev/null | jq -c '.[]')"

    if [ -n "$PLUGINS" ] || [ -n "$THEMES" ]
    then

        terminus connection:set "${SITENAME}".dev sftp
        # @todo flag staged/uncommitted changes (e.g, leftovers from a script fail)

        # Update plugins and commit changes.
        if [ -n "$PLUGINS" ]
        then
            echo "$SITENAME has updates. Applying updates..."
            for PLUGIN in $PLUGINS; do
                # @todo refactor this as a function, it's the same for theme/plugin
                SLUG="$(echo "$PLUGIN" | jq -r '.name')"
                INSTALLED="$(echo "$PLUGIN" | jq -r '.version')"
                AVAILABLE="$(echo "$PLUGIN" | jq -r '.update_version')"

                terminus wp "${SITENAME}".dev -- plugin update "${SLUG}" --format=summary < /dev/null
                MESSAGE="Update $SLUG ($INSTALLED => $AVAILABLE)."
                sleep $OSD_SLEEP_INTERVAL
                terminus env:commit "${SITENAME}".dev --message="${MESSAGE}"
            done
        fi

        # Update themes and commit changes.
        if [ -n "$THEMES" ]
        then
            for THEME in $THEMES; do
                SLUG="$(echo "$THEME" | jq -r '.name')"
                INSTALLED="$(echo "$THEME" | jq -r '.version')"
                AVAILABLE="$(echo "$THEME" | jq -r '.update_version')"

                terminus wp "${SITENAME}".dev -- theme update "${SLUG}" < /dev/null
                MESSAGE="Update $SLUG ($INSTALLED => $AVAILABLE)."
                sleep $OSD_SLEEP_INTERVAL
                terminus env:commit "${SITENAME}".dev --message="${MESSAGE}"
            done
        fi

        # Apply DB updates on dev all at once.
        terminus wp "${SITENAME}".dev -- core update-db

        # Deploy to Test env.
        # @todo build a full update list and use it for the note
        terminus env:deploy --sync-content --note="Plugin updates." -- "${SITENAME}".test
        terminus wp "${SITENAME}".test -- core update-db < /dev/null
        terminus env:clear-cache "${SITENAME}".test

        # Put the dev site back in Git mode for added security.
        terminus connection:set "${SITENAME}".dev git 

    fi
done < "$SITELIST"

# Updates are done, go check them out.
# @todo handling for cases where there are no updates.
echo "[notice] Go check the Test sites: "
while IFS='' read -r SITENAME || [ -n "${SITENAME}" ]; do
    echo -e "- https://test-${SITENAME}.pantheonsite.io"
done < "$SITELIST"